{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/contact/contact.component.ts","webpack:///src/app/components/contact/contact.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/portfolio/portfolio.component.ts","webpack:///src/app/components/portfolio/portfolio.component.html","webpack:///src/app/data-table/data-table-datasource.ts","webpack:///src/app/data-table/data-table.component.ts","webpack:///src/app/data-table/data-table.component.html","webpack:///src/app/modules/material/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","opened","toggleBtnText","text","setToggleBtnText","opacity","selector","templateUrl","styleUrls","animations","appRoutes","path","component","AppModule","declarations","providers","bootstrap","AboutComponent","transform","ContactComponent","_snackBar","contactForm","firstName","lastName","email","message","open","duration","console","log","value","onSubmit","ELEMENT_DATA","position","name","weight","symbol","HomeComponent","displayedColumns","dataSource","PortfolioComponent","EXAMPLE_DATA","DataTableDataSource","data","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","DataTableComponent","table","MaterialModule","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {\n  transition,\n  trigger,\n  style,\n  animate} from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [\n    trigger('fade',[\n      transition('void=>*',[\n        style({opacity: 0}),\n        animate(2000)\n      ])\n    ])\n  ]\n})\nexport class AppComponent {\n  title = 'my-portfolio';\n  opened= true;\n  toggleBtnText='Close'\n  setToggleBtnText(text){\n    this.toggleBtnText=text;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <div >Welcome</div>\n  <div class=\"fill-remaining-space\">\n    <button mat-button>Home</button>\n    <button mat-button>Cheat Sheets</button>\n    <button mat-button>About</button>\n    <a mat-button href=\"tel:+8801799-026515\"><i><img mat-list-item src=\"~/../../assets/call.svg\"></i></a>\n    <a mat-button href=\"mailto:sayeduzzamancuet@gmail.com\"><i><img mat-list-item src=\"~/../../assets/email.svg\"></i></a>\n  </div>\n</mat-toolbar>\n<mat-sidenav-container>\n  <mat-sidenav #sidenav mode=\"side\" (opened)=\"setToggleBtnText('Close')\" (closed)=\"setToggleBtnText('Open')\" [(opened)]=\"opened\">SAYED UZ ZAMAN\n    <mat-nav-list>\n      <div mat-list-item class=\"profile-picture\">\n        <img src=\"https://www.w3schools.com/howto/img_avatar.png\">\n    </div>\n    <a mat-list-item routerLink='/home' routerLinkActive=\"active\"><i><img mat-list-item src=\"~/../../assets/home.svg\"></i>Home</a>\n    <a mat-list-item routerLink='/about' routerLinkActive=\"active\" ><i><img mat-list-item src=\"~/../../assets/info.svg\"></i>About me </a>\n    <a mat-list-item routerLink='/portfolio' routerLinkActive=\"active\" ><i><img mat-list-item src=\"~/../../assets/folder.svg\"></i> Portfolio</a>\n    <a mat-list-item routerLink='/contact' routerLinkActive=\"active\" ><i><img mat-list-item src=\"~/../../assets/feedback.svg\"></i> Contact</a>\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <button mat-icon-button color=\"accent\" (click)=\"sidenav.toggle()\">{{toggleBtnText}}</button>\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material/material.module';\nimport { HomeComponent } from './components/home/home.component';\nimport {Routes,RouterModule} from '@angular/router';\nimport { AboutComponent } from './components/about/about.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { PortfolioComponent } from './components/portfolio/portfolio.component'\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nconst appRoutes: Routes=[\n  {path: 'home', component: HomeComponent},\n  {path: 'about', component: AboutComponent},\n  {path: 'contact', component: ContactComponent},\n  {path: 'portfolio', component: PortfolioComponent}\n]\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    ContactComponent,\n    PortfolioComponent,\n    DataTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes),\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {\n  transition,\n  trigger,\n  style,\n  animate} from '@angular/animations';\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css'],\n  animations: [\n    trigger('fade',[\n      transition('void=>*',[\n        style({transform: 'translateY(100%)'}),\n        animate(1500)\n      ])\n    ])]\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p @fade>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {transition, trigger, style, animate} from '@angular/animations';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css'],\n  animations: [\n    trigger('fade',[\n      transition('void=>*',[\n        style({opacity: 0}),\n        animate(2500)\n      ])\n    ])]\n})\nexport class ContactComponent implements OnInit {\n  contactForm=new FormGroup({\n    firstName: new FormControl(),\n    lastName: new FormControl(),\n    email: new FormControl(),\n    message: new FormControl()\n  });\n  constructor(private _snackBar: MatSnackBar) { }\n \n  ngOnInit(): void {\n  }\n  onSubmit(){\n    this._snackBar.open(\"Email has been sent\", \"Ok\", {\n      duration: 5000,\n    });\n    console.log(this.contactForm.value);\n  }\n}\n","<div>\n    <p @fade>contact form!</p>\n\n<form [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\">\n    <table>\n        <tr>\n            <mat-form-field class=\"\"><mat-label>First Name</mat-label><input formControlName=\"firstName\"  matInput required></mat-form-field>\n            <mat-form-field class=\"\"><mat-label>Last Name</mat-label><input formControlName=\"lastName\"  matInput required></mat-form-field>\n        </tr>\n        <tr>\n            <mat-form-field class=\"\"><mat-label>Your Email</mat-label><input formControlName=\"email\" required  matInput></mat-form-field>\n        </tr>\n        <tr>\n            <mat-form-field class=\"\"><mat-label>Message</mat-label>\n            <textarea  formControlName=\"message\" matInput required></textarea> </mat-form-field>\n        </tr>\n        <tr>\n            <button mat-button color=\"accent\" type=\"submit\">Send</button>\n            <button mat-button color=\"accent\" type=\"reset\">Clear</button>\n        </tr>\n    </table>\n\n\n</form>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  transition,\n  trigger,\n  style,\n  animate} from '@angular/animations';\nimport { Usermessage } from 'src/app/classes/usermessage';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  animations: [\n    trigger('fade',[\n      transition('void=>*',[\n        style({opacity: 0}),\n        animate(2500)\n      ])\n    ])]\n})\n\nexport class HomeComponent implements OnInit {\n \n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n  constructor() { \n  }\n\n  ngOnInit(): void {\n    \n  }\n  \n}\n","<div @fade>\n    <h1>\n        Hi, this is Sayed Uz Zaman!\n    </h1>\n    <p>\n        I am a software developer. Working in Java spring, c# MVC, C# winform, SQL, MySQL, Nodejs, golang and Docker+Kubernetes\n    </p>\n\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n      \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef> No. </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"weight\">\n          <th mat-header-cell *matHeaderCellDef> Weight </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n        </ng-container>\n      \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n          <th mat-header-cell *matHeaderCellDef> Symbol </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n        </ng-container>\n      \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n\n\n    <!-- <app-data-table> </app-data-table> -->\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-portfolio',\n  templateUrl: './portfolio.component.html',\n  styleUrls: ['./portfolio.component.css']\n})\nexport class PortfolioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>portfolio works!</p>\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface DataTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: DataTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the DataTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class DataTableDataSource extends DataSource<DataTableItem> {\n  data: DataTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<DataTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: DataTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: DataTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { DataTableDataSource, DataTableItem } from './data-table-datasource';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.css']\n})\nexport class DataTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<DataTableItem>;\n  dataSource: DataTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new DataTableDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"5\"\n      [pageSizeOptions]=\"[5, 10, 20, 50]\">\n  </mat-paginator>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatIconModule } from  '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatTableModule\n  ],\n  exports:[\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatTableModule\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}